apiVersion: apps/v1
kind: Deployment
metadata:
  name: tco-frontend
  namespace: staging
  labels:
    app: tco-frontend
    environment: staging
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: tco-frontend
  template:
    metadata:
      labels:
        app: tco-frontend
        environment: staging
        version: v1
    spec:
      containers:
      - name: tco-frontend
        image: IMAGE_TAG_FRONTEND
        ports:
        - containerPort: 80
          name: http
        env:
        - name: NGINX_PORT
          value: "80"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      imagePullPolicy: Always
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: tco-frontend-service
  namespace: staging
  labels:
    app: tco-frontend
    environment: staging
spec:
  selector:
    app: tco-frontend
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tco-frontend-ingress
  namespace: staging
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - staging-tco.example.com
    secretName: tco-frontend-tls
  rules:
  - host: staging-tco.example.com
    http:
      paths:
      - path: /(.*)
        pathType: Prefix
        backend:
          service:
            name: tco-frontend-service
            port:
              number: 80

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: tco-frontend-hpa
  namespace: staging
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: tco-frontend
  minReplicas: 2
  maxReplicas: 4
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70