# ---------- Base ----------
FROM node:18-alpine AS base
RUN apk add --no-cache libc6-compat curl
WORKDIR /app

# ---------- Build (dev deps, сборка) ----------
FROM base AS builder
# Копируем только файлы для резолва зависимостей (кэш слоя)
COPY package.json package-lock.json ./
COPY packages/backend/package.json ./packages/backend/
COPY packages/shared/package.json  ./packages/shared/
# Устанавливаем все deps для сборки
RUN npm ci

# Копируем исходники
COPY packages/backend ./packages/backend
COPY packages/shared  ./packages/shared

# Build shared и backend
WORKDIR /app/packages/shared
RUN npm run build

WORKDIR /app/packages/backend
RUN npm run build

# ---------- Prod deps только для backend ----------
FROM base AS prod-deps
# Нужны манифесты для корректного вычисления графа зависимостей
COPY package.json package-lock.json ./
COPY packages/backend/package.json ./packages/backend/
COPY packages/shared/package.json  ./packages/shared/
# Ставим только prod-зависимости backend workspace
# (npm v7+ поддерживает -w/--workspace)
RUN npm ci --omit=dev -w packages/backend

# ---------- Runtime ----------
FROM base AS runner
WORKDIR /app

# Без root
RUN addgroup --system --gid 1001 nodejs \
 && adduser  --system --uid 1001 nodejs

# Prod node_modules (только то, что нужно backend)
COPY --from=prod-deps --chown=nodejs:nodejs /app/node_modules ./node_modules

# Артефакты сборки
COPY --from=builder  --chown=nodejs:nodejs /app/packages/backend/dist  ./packages/backend/dist
COPY --from=builder  --chown=nodejs:nodejs /app/packages/shared/dist   ./packages/shared/dist
COPY --from=builder  --chown=nodejs:nodejs /app/packages/backend/package.json ./packages/backend/

ENV NODE_ENV=production
ENV PORT=3001

# Healthcheck (curl установлен в base)
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:3001/health || exit 1

USER nodejs
EXPOSE 3001
CMD ["node", "packages/backend/dist/server.js"]